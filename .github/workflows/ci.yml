name: CI

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      release:
        type: boolean
        default: false
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - ready_for_review
    paths-ignore:
      - "*.md"
  schedule:
    - cron: 0 16 * * *

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cargo-test:
    strategy:
      fail-fast: false
      matrix:
        machine: [windows-latest,ubuntu-latest,macos-latest]
    runs-on: ${{matrix.machine}}
    steps:
      - uses: actions/checkout@v4
      # - name: Set up pixi
      #   uses: prefix-dev/setup-pixi@v0.8.10
      #   with:
      #     run-install: false

      - uses: dtolnay/rust-toolchain@nightly

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: cargo-test
        run: ./scripts/cargo-test.ps1
        shell: pwsh

      - name: Upload results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v5

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true

  cross-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # - name: Set up pixi
      #   uses: prefix-dev/setup-pixi@v0.8.10
      #   with:
      #     run-install: false

      - name: cross-build-release
        if: ${{inputs.release}}
        run: ./scripts/cross-build.ps1 -Release
        shell: pwsh

      - name: cross-build
        if: ${{!inputs.release}}
        run: ./scripts/cross-build.ps1
        shell: pwsh

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: aarch64
          path: |
            ./target/aarch64-unknown-linux-gnu/*/examples/gps
            ./target/aarch64-unknown-linux-gnu/*/examples/list-devices
            ./target/aarch64-unknown-linux-gnu/*/examples/serial-reader
          if-no-files-found: error

  cargo-bench:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - if: ${{github.ref_name!='main'}}
        uses: Swatinem/rust-cache@v2

      - run: cargo install cargo-codspeed --locked
      - run: ./scripts/setup.ps1
        shell: pwsh

      - name: Build the benchmark target(s)
        run: cargo codspeed build

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: cargo codspeed run
          token: ${{ secrets.CODSPEED_TOKEN }}

  cargo-doc:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: cargo-doc
        run: ./scripts/cargo-doc.ps1
        shell: pwsh
